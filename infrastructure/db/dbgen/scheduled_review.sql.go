// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: scheduled_review.sql

package dbgen

import (
	"context"
)

const updateOverdueScheduledDatesAndSlideFutureDates = `-- name: UpdateOverdueScheduledDatesAndSlideFutureDates :exec
WITH c AS (
    SELECT
        ri.id AS item_id,
    MIN(rd.scheduled_date) AS old_date,
    (now() AT TIME ZONE u.timezone)::date AS today_local,
    ((now() AT TIME ZONE u.timezone)::date - MIN(rd.scheduled_date)) AS delta_days
    FROM 
        review_dates rd
    JOIN 
        review_items ri
    ON
        ri.id = rd.item_id
    JOIN
        users u
    ON
        u.id  = ri.user_id
    WHERE
        rd.is_completed = FALSE
    AND 
        rd.scheduled_date < (now() AT TIME ZONE u.timezone)::date
    GROUP BY 
        ri.id, u.timezone
)
UPDATE review_dates rd
    SET 
        scheduled_date = rd.scheduled_date + c.delta_days
    FROM 
        c
    WHERE
        rd.item_id = c.item_id
    AND 
        rd.scheduled_date >= c.old_date
    AND
        rd.is_completed = FALSE
`

func (q *Queries) UpdateOverdueScheduledDatesAndSlideFutureDates(ctx context.Context) error {
	_, err := q.db.Exec(ctx, updateOverdueScheduledDatesAndSlideFutureDates)
	return err
}
